name: Publish Docker image

on:
  workflow_dispatch:
  push:

jobs:

  gitversion:
    name: get current git version
    runs-on: ubuntu-latest
    outputs:
      majorminorpatch: ${{ steps.gitversion.outputs.majorMinorPatch }}
      semver: ${{ steps.gitversion.outputs.semVer }}
      shortsha: ${{ steps.gitversion.outputs.shortSha }}
      branchname: ${{ steps.gitversion.outputs.branchName }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - uses: gittools/actions/gitversion/execute@v0.9.7
        id: gitversion

  go-version:
    name: determine go version
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.version.outputs.go-version }}
    steps:
      - uses: actions/checkout@v2
      - name: run/output-go-version
        id: version
        run: |
          echo "Building with Go $(cat .go-version)"
          echo "::set-output name=go-version::$(cat .go-version)"

  build-coredns:
    name: build coredns binary
    runs-on: ubuntu-latest
    env:
      GOVER: ${{ needs.go-version.outputs.go-version }}
      GOOS: linux
      GOARCH: amd64
    needs:
      - go-version
    steps:
      - uses: actions/checkout@v3
        with:
          repository: coredns/coredns
          ref: v1.9.3

      - uses: actions/checkout@v3
        with:
          path: build

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.go-version.outputs.go-version }}

      - name: run/coredns-make
        run : |
          cat build/plugin.cfg >> plugin.cfg
          make
          chmod +x coredns

      - uses: actions/upload-artifact@v3
        with:
          name: coredns
          path: coredns
          if-no-files-found: error
          retention-days: 1

  build-image:
    name: build and upload docker image
    runs-on: ubuntu-latest
    env:
      SEMVER: ${{ needs.gitversion.outputs.semver }}
      SHORTSHA: ${{ needs.gitversion.outputs.shortsha }}
      MAJORMINORPATCH: ${{ needs.gitversion.outputs.majorminorpatch }}
      BRANCH: ${{ needs.gitversion.outputs.branchname }}
    needs:
      - gitversion
      - build-coredns
    steps:

      - uses: actions/checkout@v3

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ganawa
          password: ${{ secrets.GHP_TOKEN }}

      - uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: run/configure-gcp-docker
        run: |
          gcloud auth configure-docker us-docker.pkg.dev -q

      - uses: actions/download-artifact@v3
        with:
          name: coredns

      - name: run/docker-build-push-develop
        if: contains(env.BRANCH, 'develop') || startsWith(env.BRANCH, 'release') || startsWith(env.BRANCH, 'hotfix') || startsWith(env.BRANCH, 'tags')
        run: |
          docker build . \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/coredns:${{ env.SEMVER }} \
            -t ghcr.io/${{ github.repository_owner }}/coredns:${{ env.SEMVER }} \
            -t us-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT }}/oci-repository/coredns:${{ env.SEMVER }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/coredns:${{ env.SEMVER }}
          docker push ghcr.io/${{ github.repository_owner }}/coredns:${{ env.SEMVER }}
          docker push us-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT }}/oci-repository/coredns:${{ env.SEMVER }}

      - name: run/docker-build-push-main
        if: contains(env.BRANCH, 'main')
        run: |
          docker build . \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/coredns:latest \
            -t ghcr.io/${{ github.repository_owner }}/coredns:latest \
            -t us-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT }}/oci-repository/coredns:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/coredns:latest
          docker push ghcr.io/${{ github.repository_owner }}/coredns:latest
          docker push us-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT }}/oci-repository/coredns:latest

      - name: run/docker-build-push-sha
        if: "!startsWith(env.BRANCH, 'develop') && !startsWith(env.BRANCH, 'release') && !startsWith(env.BRANCH, 'hotfix') && !startsWith(env.branchName, 'main') && !startsWith(env.BRANCH, 'tags')"
        run: |
          docker build . \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/coredns:${{ env.SHORTSHA }} \
            -t ghcr.io/${{ github.repository_owner }}/coredns:${{ env.SHORTSHA }} \
            -t us-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT }}/oci-repository/coredns:${{ env.SHORTSHA }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/coredns:${{ env.SHORTSHA }}
          docker push ghcr.io/${{ github.repository_owner }}/coredns:${{ env.SHORTSHA }}
          docker push us-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT }}/oci-repository/coredns:${{ env.SHORTSHA }}

  sync-readme:
    name: sync dockerhub readme
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref_name, 'main') }}
    steps:
      - uses: actions/checkout@v3
      - uses: meeDamian/sync-readme@v1.0.6
        with:
          user: ganawa
          slug: ganawa/coredns
          pass: ${{ secrets.DOCKER_HUB_PASS }}
          description: true